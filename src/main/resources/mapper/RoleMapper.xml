<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org/DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bugull.locker.mapper.RoleMapper">
    <resultMap id="BaseResultMap" type="com.bugull.locker.entity.RoleEntity">
        <id property="id" javaType="string" column="id" />
        <result column="roleName" jdbcType="VARCHAR" property="roleName" />
        <result column="roleCode" jdbcType="VARCHAR" property="roleCode" />
        <result column="createUser" jdbcType="VARCHAR" property="createUser"/>
        <result column="createDate" jdbcType="DATE" property="createDate" javaType="java.sql.Timestamp"/>
        <result column="modifyUser" jdbcType="VARCHAR" property="modifyUser"/>
        <result column="modifyDate" jdbcType="DATE" property="modifyDate" javaType="java.sql.Timestamp"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <result column="version" jdbcType="INTEGER" property="version"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>

        <collection property="roleMenuList" ofType="com.bugull.locker.entity.RoleMenuEntity" column="role_menu_id">
            <id column="roleMenuId" property="id" />
            <result column="roleId" property="roleId" />
            <result column="menuId" property="menuId" />
        </collection>
    </resultMap>

    <sql id = "Base_Column_List">
        `id`, `roleName`, `roleCode`,
        `createUser`, `createDate`, `modifyUser`, `modifyDate`, `status`, `version`, `remark`
    </sql>

    <select id="selectById" parameterType="java.lang.String" resultMap="BaseResultMap">
        SELECT r.`id`, r.`roleName`, r.`roleCode`,
        r.`createUser`, r.`createDate`, r.`modifyUser`, r.`modifyDate`, r.`status`, r.`version`, r.`remark`,
        rm.`roleId` AS role_menu_id, rm.`id` as roleMenuId, rm.`roleId`, rm.`menuId`
        FROM `sys_role` r
        LEFT JOIN `sys_rolemenu` rm ON rm.`roleId` = r.`id`
        WHERE  r.`id` = #{id} AND r.`status` > -1
    </select>

    <select id="selectByIds" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM `sys_role` WHERE `status` >= -1 AND `id` IN
        <foreach collection="list" item="id" index="index" separator="," open="(" close=")">
            #{id}
        </foreach>
    </select>

    <update id="deleteById" parameterType="java.lang.String">
        UPDATE `sys_role` SET `status` = -1, `version` = `version` + 1 WHERE `id` = #{id}
    </update>

    <update id="deleteByIds">
        UPDATE `sys_role` SET `status` = -1, `version` = `version` + 1 WHERE `id` IN
        <foreach collection="list" item="id" index="index" separator="," open="(" close=")">
            #{id}
        </foreach>
    </update>

    <insert id="insertEntity" parameterType="com.bugull.locker.entity.FactoryEntity">
        INSERT INTO `sys_role` (`id`, `roleName`, `roleCode`,
        `createUser`, `createDate`, `modifyUser`, `modifyDate`, `status`, `version`, `remark`
        )
        VALUES
        (#{id,jdbcType=VARCHAR}, #{roleName,jdbcType=VARCHAR}, #{roleCode,jdbcType=VARCHAR},
        #{createUser,jdbcType=VARCHAR}, NOW(), #{modifyUser,jdbcType=VARCHAR}, NOW(), 1, 1, #{remark,jdbcType=VARCHAR})
    </insert>

    <update id="updateEntity" parameterType="com.bugull.locker.entity.FactoryEntity">
        UPDATE `sys_role`
        <set>
            <if test="roleName != null &amp; roleName != '' ">
                `roleName` = #{roleName,jdbcType=VARCHAR},
            </if>
            <if test="roleCode != null &amp; roleCode != '' ">
                `roleCode` = #{roleCode,jdbcType=VARCHAR},
            </if>
            `modifyUser` = #{modifyUser,jdbcType=VARCHAR},
            `modifyDate` = NOW(),
            `version` = `version` + 1
        </set>
        where `id` = #{id,jdbcType=VARCHAR} AND `version` = #{version,jdbcType=INTEGER}
    </update>

    <select id="selectPageByMap" resultMap="BaseResultMap" >
        SELECT <include refid="Base_Column_List"/> FROM `sys_role`
        <where>
            `status` > -1
            <if test="roleName != null and roleName != ''">
                AND `roleName` LIKE CONCAT('%', #{roleName}, '%')
            </if>
            <if test="roleCode != null and roleCode != ''">
                AND `roleCode` LIKE CONCAT('%', #{roleCode}, '%')
            </if>
        </where>
        ORDER BY `createDate` DESC
    </select>

    <update id="deleteByUser" parameterType="java.lang.String">
        UPDATE `sys_role` SET `status` = -1, `version` = `version` + 1
        `modifyUser` = #{userId}, `modifyDate` = NOW()
        WHERE `id` = #{id}
    </update>

    <select id="checkRoleExist" resultType="java.lang.Integer">
        SELECT 1 FROM `sys_role`
        <where>
            `status` > -1
            <if test="roleName != null and roleName != ''">
                AND `roleName` = #{roleName}
            </if>
            <if test="roleCode != null and roleCode != ''">
                AND `roleCode` = #{roleCode}
            </if>
        </where>
        LIMIT 1
    </select>


</mapper>